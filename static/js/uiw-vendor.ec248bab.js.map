{"version":3,"file":"static/js/uiw-vendor.ec248bab.js","mappings":"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","sources":["../node_modules/@uiw/codemirror-extensions-events/src/index.ts","../node_modules/@uiw/codemirror-themes/src/index.tsx","../../src/main.js","../node_modules/@uiw/react-back-to-top/src/index.tsx","../node_modules/@uiw/codemirror-extensions-basic-setup/src/index.ts","../node_modules/@uiw/react-codemirror/src/useCodeMirror.ts","../node_modules/@uiw/react-codemirror/src/utils.ts","../node_modules/@uiw/react-codemirror/src/index.tsx","../node_modules/@uiw/github-corners/src/index.ts","../node_modules/@uiw/react-github-corners/src/index.tsx","../node_modules/@uiw/react-markdown-preview/src/nodes/octiconLink.ts","../node_modules/@uiw/react-markdown-preview/src/plugins/reservedMeta.ts","../node_modules/@uiw/react-markdown-preview/src/index.tsx","../node_modules/@uiw/react-markdown-preview/src/nodes/copy.ts"],"sourcesContent":["import { ViewPlugin, EditorView } from '@codemirror/view';\nexport type Events<K extends keyof HTMLElementEventMap> = Record<\n  K,\n  (this: HTMLElement, event: HTMLElementEventMap[K]) => void\n>;\n\ntype Options<T extends keyof HTMLElementEventMap> = {\n  /**\n   * Bind events on different dom nodes.\n   * - `scroll` The DOM element that wraps the entire editor view.\n   * - `dom` The DOM element that can be styled to scroll. (Note that it may not have been, so you can't assume this is scrollable.)\n   * - `content` The editable DOM element holding the editor content. You should not, usually, interact with this content directly though the DOM, since the editor will immediately undo most of the changes you make.\n   */\n  type?: 'scroll' | 'dom' | 'content';\n  events?: Events<T>;\n};\n\nfunction events<T extends keyof HTMLElementEventMap>(opts: Options<T>) {\n  const { type = 'scroll', events } = opts;\n  return ViewPlugin.fromClass(\n    class {\n      dom?: HTMLElement;\n      view: EditorView;\n      constructor(view: EditorView) {\n        this.view = view;\n        if (type === 'dom') {\n          this.dom = view.dom;\n        } else if (type === 'content') {\n          this.dom = view.contentDOM;\n        } else {\n          this.dom = view.scrollDOM;\n        }\n        (Object.keys(events || {}) as Array<keyof typeof events>).forEach((keyname) => {\n          if (events && events[keyname] && this.dom) {\n            this.dom.addEventListener(keyname, events[keyname]);\n          }\n        });\n      }\n      destroy() {\n        (Object.keys(events || {}) as Array<keyof typeof events>).forEach((keyname) => {\n          if (events && events[keyname] && this.dom) {\n            this.dom.removeEventListener(keyname, events[keyname]);\n          }\n        });\n      }\n    },\n  );\n}\n/**\n * The DOM element that can be styled to scroll.\n * (Note that it may not have been, so you can't assume this is scrollable.)\n */\nexport function dom<T extends keyof HTMLElementEventMap>(opts: Events<T>) {\n  return events({ type: 'dom', events: opts });\n}\n/**\n * The DOM element that wraps the entire editor view.\n */\nexport function scroll<T extends keyof HTMLElementEventMap>(opts: Events<T>) {\n  return events({ type: 'scroll', events: opts });\n}\n/**\n * The editable DOM element holding the editor content.\n * You should not, usually, interact with this content directly though the DOM,\n * since the editor will immediately undo most of the changes you make.\n */\nexport function content<T extends keyof HTMLElementEventMap>(opts: Events<T>) {\n  return events({ type: 'content', events: opts });\n}\n","import { EditorView } from '@codemirror/view';\nimport { Extension } from '@codemirror/state';\nimport { HighlightStyle, TagStyle, syntaxHighlighting } from '@codemirror/language';\nimport { StyleSpec } from 'style-mod';\n\nexport interface CreateThemeOptions {\n  /**\n   * Theme inheritance. Determines which styles CodeMirror will apply by default.\n   */\n  theme: Theme;\n  /**\n   * Settings to customize the look of the editor, like background, gutter, selection and others.\n   */\n  settings: Settings;\n  /** Syntax highlighting styles. */\n  styles: TagStyle[];\n}\n\ntype Theme = 'light' | 'dark';\n\nexport interface Settings {\n  /** Editor background. */\n  background: string;\n  /** Default text color. */\n  foreground: string;\n  /** Caret color. */\n  caret?: string;\n  /** Selection background. */\n  selection?: string;\n  /** Selection match background. */\n  selectionMatch?: string;\n  /** Background of highlighted lines. */\n  lineHighlight?: string;\n  /** Gutter background. */\n  gutterBackground?: string;\n  /** Text color inside gutter. */\n  gutterForeground?: string;\n  /** Gutter right border color. */\n  gutterBorder?: string;\n}\n\nexport const createTheme = ({ theme, settings, styles }: CreateThemeOptions): Extension => {\n  const themeOptions: Record<string, StyleSpec> = {\n    '&': {\n      backgroundColor: settings.background,\n      color: settings.foreground,\n    },\n    '.cm-gutters': {},\n  };\n\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret,\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret,\n    };\n  }\n\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight,\n    };\n    themeOptions['.cm-activeLineGutter'] = {\n      backgroundColor: settings.lineHighlight,\n    };\n  }\n\n  if (settings.selection) {\n    themeOptions[\n      '&.cm-focused .cm-selectionBackground .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, ::selection'\n    ] = {\n      backgroundColor: settings.selection,\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch,\n    };\n  }\n  const themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark',\n  });\n\n  const highlightStyle = HighlightStyle.define(styles);\n  const extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n\n  return extension;\n};\n\nexport default createTheme;\n","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\n\nexport interface BackToUpProps extends React.AllHTMLAttributes<HTMLDivElement> {\n  prefixCls?: string;\n  /** Scroll bar area @default document.documentElement */\n  element?: HTMLElement | null;\n  /** Whether to use smooth scrolling* @default true */\n  smooth?: boolean;\n  /** Classname to add/override styling (note, !important for overrides might be needed) */\n  className?: string;\n  /** Object to add/override styling */\n  style?: React.CSSProperties;\n  /** Height after page scroll to be visible @default 120 */\n  top?: number;\n  /** The Button width & height @default 35 */\n  size?: number;\n  /** the width of the progress bar */\n  strokeWidth?: number;\n  /** hide progress icon */\n  hideProgress?: boolean;\n}\n\nconst warpperStyle: React.CSSProperties = {\n  position: 'sticky',\n  bottom: 15,\n  right: 15,\n  visibility: 'visible',\n  opacity: 0,\n  transition: 'visibility 0.3s linear 0s, opacity 0.3s linear 0s',\n  cursor: 'pointer',\n  userSelect: 'none',\n};\n\nconst svgStyle: React.CSSProperties = {\n  display: 'block',\n  transform: 'rotate(-90deg)',\n};\n\nconst circleStyle: React.CSSProperties = {\n  transition: 'stroke-dashoffset 0.3s linear 0s',\n};\n\nconst childStyle: React.CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  display: 'flex',\n  height: '100%',\n  width: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#fff',\n  fontSize: 12,\n};\n\nconst documentElement = document.documentElement;\n\nexport default function BackToUp(props: BackToUpProps = {}) {\n  const {\n    className,\n    prefixCls = 'w-back-to-up',\n    element = documentElement,\n    top = 120,\n    size = 35,\n    strokeWidth = 3,\n    smooth = true,\n    hideProgress = false,\n    children,\n    ...others\n  } = props;\n  const $dom = useRef<HTMLDivElement>(null);\n  const cls = [className, prefixCls].filter(Boolean).join(' ');\n  const style: React.CSSProperties = Object.assign(\n    {},\n    warpperStyle,\n    {\n      position: element === documentElement ? 'fixed' : 'sticky',\n    },\n    others.style,\n    {\n      width: size,\n      height: size,\n      opacity: top === 0 ? 1 : 0,\n    },\n  );\n  const center = useMemo(() => size / 2, [size]);\n  const radius = useMemo(() => size / 2 - strokeWidth / 2, [size, strokeWidth]);\n  const dasharray = useMemo(() => Math.PI * radius * 2, [radius]);\n  const [progress, setProgress] = useState(dasharray || 0);\n\n  const handleScroll = (ev: MouseEventInit) => {\n    const { clientHeight, scrollHeight, scrollTop } = element || documentElement;\n    const percentage = scrollTop / (scrollHeight - clientHeight);\n    setProgress(dasharray - dasharray * percentage);\n    if ($dom.current && top > 0) {\n      $dom.current.style.opacity = scrollTop > top ? '1' : '0';\n    }\n  };\n\n  useEffect(() => {\n    const scrollElement = element === documentElement ? document : element;\n    if (scrollElement) {\n      scrollElement.addEventListener('scroll', handleScroll, { passive: true });\n    }\n    return () => {\n      if (scrollElement) {\n        scrollElement.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [element]);\n\n  const goToUp = (ev: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    element!.scrollTo({ top: 0, behavior: smooth ? 'smooth' : 'auto' });\n  };\n\n  return (\n    <div className={cls} ref={$dom} {...others} onClick={goToUp} style={style}>\n      {!hideProgress && (\n        <svg viewBox={`0 0 ${size} ${size}`} width={size} height={size} focusable=\"false\" style={svgStyle}>\n          <circle\n            fill=\"rgb(0 0 0 / 75%)\"\n            stroke=\"rgb(200 200 200 / 85%)\"\n            strokeWidth={strokeWidth}\n            r={radius}\n            cx={center}\n            cy={center}\n          />\n          <circle\n            fill=\"none\"\n            stroke=\"rgb(0 0 0 / 50%)\"\n            strokeWidth={strokeWidth}\n            r={radius}\n            cx={center}\n            cy={center}\n            strokeDasharray={dasharray}\n            strokeDashoffset={progress}\n            style={circleStyle}\n          />\n        </svg>\n      )}\n      {children && <div style={childStyle}>{children}</div>}\n    </div>\n  );\n}\n","import {\n  KeyBinding,\n  lineNumbers,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  drawSelection,\n  dropCursor,\n  rectangularSelection,\n  crosshairCursor,\n  highlightActiveLine,\n  keymap,\n} from '@codemirror/view';\nimport { EditorState, Extension } from '@codemirror/state';\nimport { history, defaultKeymap, historyKeymap } from '@codemirror/commands';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { closeBrackets, autocompletion, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport {\n  foldGutter,\n  indentOnInput,\n  syntaxHighlighting,\n  defaultHighlightStyle,\n  bracketMatching,\n  foldKeymap,\n} from '@codemirror/language';\n\nimport { lintKeymap } from '@codemirror/lint';\n\nexport interface BasicSetupOptions extends MinimalSetupOptions {\n  lineNumbers?: boolean;\n  highlightActiveLineGutter?: boolean;\n  foldGutter?: boolean;\n  dropCursor?: boolean;\n  allowMultipleSelections?: boolean;\n  indentOnInput?: boolean;\n  bracketMatching?: boolean;\n  closeBrackets?: boolean;\n  autocompletion?: boolean;\n  rectangularSelection?: boolean;\n  crosshairCursor?: boolean;\n  highlightActiveLine?: boolean;\n  highlightSelectionMatches?: boolean;\n\n  closeBracketsKeymap?: boolean;\n  searchKeymap?: boolean;\n  foldKeymap?: boolean;\n  completionKeymap?: boolean;\n  lintKeymap?: boolean;\n}\n\n/**\nThis is an extension value that just pulls together a number of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of separate packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#view.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#commands.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#language.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#language.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#view.rectangularSelection) and [crosshair cursor](https://codemirror.net/6/docs/ref/#view.crosshairCursor)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis extension does not allow customization. The idea is that,\nonce you decide you want to configure your editor more precisely,\nyou take this package's source (which is just a bunch of imports\nand an array literal), copy it into your own code, and adjust it\nas desired.\n*/\nexport const basicSetup = (options: BasicSetupOptions = {}): Extension[] => {\n  let keymaps: KeyBinding[] = [];\n  if (options.closeBracketsKeymap !== false) {\n    keymaps = keymaps.concat(closeBracketsKeymap);\n  }\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.searchKeymap !== false) {\n    keymaps = keymaps.concat(searchKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  if (options.foldKeymap !== false) {\n    keymaps = keymaps.concat(foldKeymap);\n  }\n  if (options.completionKeymap !== false) {\n    keymaps = keymaps.concat(completionKeymap);\n  }\n  if (options.lintKeymap !== false) {\n    keymaps = keymaps.concat(lintKeymap);\n  }\n  const extensions: Extension[] = [];\n  if (options.lineNumbers !== false) extensions.push(lineNumbers());\n  if (options.highlightActiveLineGutter !== false) extensions.push(highlightActiveLineGutter());\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.foldGutter !== false) extensions.push(foldGutter());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.dropCursor !== false) extensions.push(dropCursor());\n  if (options.allowMultipleSelections !== false) extensions.push(EditorState.allowMultipleSelections.of(true));\n  if (options.indentOnInput !== false) extensions.push(indentOnInput());\n  if (options.syntaxHighlighting !== false)\n    extensions.push(syntaxHighlighting(defaultHighlightStyle, { fallback: true }));\n  if (options.bracketMatching !== false) extensions.push(bracketMatching());\n  if (options.closeBrackets !== false) extensions.push(closeBrackets());\n  if (options.autocompletion !== false) extensions.push(autocompletion());\n  if (options.rectangularSelection !== false) extensions.push(rectangularSelection());\n  if (options.crosshairCursor !== false) extensions.push(crosshairCursor());\n  if (options.highlightActiveLine !== false) extensions.push(highlightActiveLine());\n  if (options.highlightSelectionMatches !== false) extensions.push(highlightSelectionMatches());\n\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};\n\nexport interface MinimalSetupOptions {\n  highlightSpecialChars?: boolean;\n  history?: boolean;\n  drawSelection?: boolean;\n  syntaxHighlighting?: boolean;\n\n  defaultKeymap?: boolean;\n  historyKeymap?: boolean;\n}\n\n/**\nA minimal set of extensions to create a functional editor. Only\nincludes [the default keymap](https://codemirror.net/6/docs/ref/#commands.defaultKeymap), [undo\nhistory](https://codemirror.net/6/docs/ref/#commands.history), [special character\nhighlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars), [custom selection\ndrawing](https://codemirror.net/6/docs/ref/#view.drawSelection), and [default highlight\nstyle](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle).\n*/\nexport const minimalSetup = (options: MinimalSetupOptions = {}) => {\n  let keymaps: KeyBinding[] = [];\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  const extensions: Extension[] = [];\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.syntaxHighlighting !== false)\n    extensions.push(syntaxHighlighting(defaultHighlightStyle, { fallback: true }));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};\n","import { useEffect, useState } from 'react';\nimport { EditorState, StateEffect } from '@codemirror/state';\nimport { indentWithTab } from '@codemirror/commands';\nimport { EditorView, keymap, ViewUpdate, placeholder } from '@codemirror/view';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { getStatistics } from './utils';\nimport { ReactCodeMirrorProps } from '.';\n\nexport interface UseCodeMirror extends ReactCodeMirrorProps {\n  container?: HTMLDivElement | null;\n}\n\nexport function useCodeMirror(props: UseCodeMirror) {\n  const {\n    value,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions = [],\n    autoFocus,\n    theme = 'light',\n    height = '',\n    minHeight = '',\n    maxHeight = '',\n    placeholder: placeholderStr = '',\n    width = '',\n    minWidth = '',\n    maxWidth = '',\n    editable = true,\n    readOnly = false,\n    indentWithTab: defaultIndentWithTab = true,\n    basicSetup: defaultBasicSetup = true,\n    root,\n    initialState,\n  } = props;\n  const [container, setContainer] = useState<HTMLDivElement>();\n  const [view, setView] = useState<EditorView>();\n  const [state, setState] = useState<EditorState>();\n  const defaultLightThemeOption = EditorView.theme(\n    {\n      '&': {\n        backgroundColor: '#fff',\n      },\n    },\n    {\n      dark: false,\n    },\n  );\n  const defaultThemeOption = EditorView.theme({\n    '&': {\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth,\n    },\n  });\n  const updateListener = EditorView.updateListener.of((vu: ViewUpdate) => {\n    if (vu.docChanged && typeof onChange === 'function') {\n      const doc = vu.state.doc;\n      const value = doc.toString();\n      onChange(value, vu);\n    }\n    onStatistics && onStatistics(getStatistics(vu));\n  });\n\n  let getExtensions = [updateListener, defaultThemeOption];\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n\n  if (onUpdate && typeof onUpdate === 'function') {\n    getExtensions.push(EditorView.updateListener.of(onUpdate));\n  }\n  getExtensions = getExtensions.concat(extensions);\n\n  useEffect(() => {\n    if (container && !state) {\n      const config = {\n        doc: value,\n        selection,\n        extensions: getExtensions,\n      };\n      const stateCurrent = initialState\n        ? EditorState.fromJSON(initialState.json, config, initialState.fields)\n        : EditorState.create(config);\n      setState(stateCurrent);\n      if (!view) {\n        const viewCurrent = new EditorView({\n          state: stateCurrent,\n          parent: container,\n          root,\n        });\n        setView(viewCurrent);\n        onCreateEditor && onCreateEditor(viewCurrent, stateCurrent);\n      }\n    }\n    return () => {\n      if (view) {\n        setState(undefined);\n        setView(undefined);\n      }\n    };\n  }, [container, state]);\n\n  useEffect(() => setContainer(props.container!), [props.container]);\n\n  useEffect(\n    () => () => {\n      if (view) {\n        view.destroy();\n        setView(undefined);\n      }\n    },\n    [view],\n  );\n\n  useEffect(() => {\n    if (autoFocus && view) {\n      view.focus();\n    }\n  }, [autoFocus, view]);\n\n  useEffect(() => {\n    if (view) {\n      view.dispatch({ effects: StateEffect.reconfigure.of(getExtensions) });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    theme,\n    extensions,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    placeholderStr,\n    editable,\n    readOnly,\n    defaultIndentWithTab,\n    defaultBasicSetup,\n    onChange,\n    onUpdate,\n  ]);\n\n  useEffect(() => {\n    const currentValue = view ? view.state.doc.toString() : '';\n    if (view && value !== currentValue) {\n      view.dispatch({\n        changes: { from: 0, to: currentValue.length, insert: value || '' },\n      });\n    }\n  }, [value, view]);\n\n  return { state, setState, view, setView, container, setContainer };\n}\n","import { EditorSelection, SelectionRange, Line } from '@codemirror/state';\nimport { ViewUpdate } from '@codemirror/view';\n\nexport interface Statistics {\n  /** total length of the document */\n  length: number;\n  /** Get the number of lines in the editor. */\n  lineCount: number;\n  /** Get the currently line description around the given position. */\n  line: Line;\n  /** Get the proper [line-break](https://codemirror.net/docs/ref/#state.EditorState^lineSeparator) string for this state. */\n  lineBreak: string;\n  /** Returns true when the editor is [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only. */\n  readOnly: boolean;\n  /** The size (in columns) of a tab in the document, determined by the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet. */\n  tabSize: number;\n  /** Cursor Position */\n  selection: EditorSelection;\n  /** Make sure the selection only has one range. */\n  selectionAsSingle: SelectionRange;\n  /** Retrieves a list of all current selections. */\n  ranges: readonly SelectionRange[];\n  /** Get the currently selected code. */\n  selectionCode: string;\n  /**\n   * The length of the given array should be the same as the number of active selections.\n   * Replaces the content of the selections with the strings in the array.\n   */\n  selections: string[];\n  /** Return true if any text is selected. */\n  selectedText: boolean;\n}\n\nexport const getStatistics = (view: ViewUpdate): Statistics => {\n  return {\n    line: view.state.doc.lineAt(view.state.selection.main.from),\n    lineCount: view.state.doc.lines,\n    lineBreak: view.state.lineBreak,\n    length: view.state.doc.length,\n    readOnly: view.state.readOnly,\n    tabSize: view.state.tabSize,\n    selection: view.state.selection,\n    selectionAsSingle: view.state.selection.asSingle().main,\n    ranges: view.state.selection.ranges,\n    selectionCode: view.state.sliceDoc(view.state.selection.main.from, view.state.selection.main.to),\n    selections: view.state.selection.ranges.map((r) => view.state.sliceDoc(r.from, r.to)),\n    selectedText: view.state.selection.ranges.some((r) => !r.empty),\n  };\n};\n","import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { EditorState, EditorStateConfig, Extension, StateField } from '@codemirror/state';\nimport { EditorView, ViewUpdate } from '@codemirror/view';\nimport { BasicSetupOptions } from '@uiw/codemirror-extensions-basic-setup';\nimport { useCodeMirror } from './useCodeMirror';\nimport { Statistics } from './utils';\n\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './utils';\n\nexport interface ReactCodeMirrorProps\n  extends Omit<EditorStateConfig, 'doc' | 'extensions'>,\n    Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'placeholder'> {\n  /** value of the auto created model in the editor. */\n  value?: string;\n  height?: string;\n  minHeight?: string;\n  maxHeight?: string;\n  width?: string;\n  minWidth?: string;\n  maxWidth?: string;\n  /** focus on the editor. */\n  autoFocus?: boolean;\n  /** Enables a placeholder—a piece of example content to show when the editor is empty. */\n  placeholder?: string | HTMLElement;\n  /**\n   * `light` / `dark` / `Extension` Defaults to `light`.\n   * @default light\n   */\n  theme?: 'light' | 'dark' | Extension;\n  /**\n   * Whether to optional basicSetup by default\n   * @default true\n   */\n  basicSetup?: boolean | BasicSetupOptions;\n  /**\n   * This disables editing of the editor content by the user.\n   * @default true\n   */\n  editable?: boolean;\n  /**\n   * This disables editing of the editor content by the user.\n   * @default false\n   */\n  readOnly?: boolean;\n  /**\n   * Whether to optional basicSetup by default\n   * @default true\n   */\n  indentWithTab?: boolean;\n  /** Fired whenever a change occurs to the document. */\n  onChange?(value: string, viewUpdate: ViewUpdate): void;\n  /** Some data on the statistics editor. */\n  onStatistics?(data: Statistics): void;\n  /** Fired whenever any state change occurs within the editor, including non-document changes like lint results. */\n  onUpdate?(viewUpdate: ViewUpdate): void;\n  /** The first time the editor executes the event. */\n  onCreateEditor?(view: EditorView, state: EditorState): void;\n  /**\n   * Extension values can be [provided](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions) when creating a state to attach various kinds of configuration and behavior information.\n   * They can either be built-in extension-providing objects,\n   * such as [state fields](https://codemirror.net/6/docs/ref/#state.StateField) or [facet providers](https://codemirror.net/6/docs/ref/#state.Facet.of),\n   * or objects with an extension in its `extension` property. Extensions can be nested in arrays arbitrarily deep—they will be flattened when processed.\n   */\n  extensions?: Extension[];\n  /**\n   * If the view is going to be mounted in a shadow root or document other than the one held by the global variable document (the default), you should pass it here.\n   * Originally from the [config of EditorView](https://codemirror.net/6/docs/ref/#view.EditorView.constructor%5Econfig.root)\n   */\n  root?: ShadowRoot | Document;\n  /**\n   * Create a state from its JSON representation serialized with [toJSON](https://codemirror.net/docs/ref/#state.EditorState.toJSON) function\n   */\n  initialState?: {\n    json: any;\n    fields?: Record<string, StateField<any>>;\n  };\n}\n\nexport interface ReactCodeMirrorRef {\n  editor?: HTMLDivElement | null;\n  state?: EditorState;\n  view?: EditorView;\n}\n\nconst ReactCodeMirror = forwardRef<ReactCodeMirrorRef, ReactCodeMirrorProps>((props, ref) => {\n  const {\n    className,\n    value = '',\n    selection,\n    extensions = [],\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    autoFocus,\n    theme = 'light',\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    root,\n    initialState,\n    ...other\n  } = props;\n  const editor = useRef<HTMLDivElement>(null);\n  const { state, view, container, setContainer } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState,\n  });\n\n  useImperativeHandle(ref, () => ({ editor: editor.current, state: state, view: view }), [\n    editor,\n    container,\n    state,\n    view,\n  ]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(`value must be typeof string but got ${typeof value}`);\n  }\n\n  const defaultClassNames = typeof theme === 'string' ? `cm-theme-${theme}` : 'cm-theme';\n  return <div ref={editor} className={`${defaultClassNames}${className ? ` ${className}` : ''}`} {...other}></div>;\n});\n\nReactCodeMirror.displayName = 'CodeMirror';\n\nexport default ReactCodeMirror;\n","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","import React from 'react';\nimport '@uiw/github-corners';\n\nexport interface GitHubCornersProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  /**\n   * The link to your project page.\n   */\n  href?: string;\n  /**\n   * The width and height of the corner. \n   * Default: `80`\n   */\n  size?: number;\n  /**\n   * The background color of the corner.\n   * Default: `#151513`\n   */\n  bgColor?: string;\n  /**\n   * The Github logo color of the corner.\n   * Default: `#fff`\n   */\n  color?: string;\n  /**\n   * The position of corner. \n   * Default: `right`\n   */\n  position?: 'left' | 'right';\n  /** Is it displayed at the bottom? */\n  bottom?: boolean,\n  /** \n   * It is positioned relative to the initial containing block established.\n   * Default: `false`\n   */\n  fixed?: boolean;\n  /**\n   * Sets the z-order of a positioned element and its descendants or flex items.\n   */\n  zIndex?: number;\n}\n\nexport default function githubCorners(props: GitHubCornersProps) {\n  const { size = 80, fixed = false, bottom, zIndex, className, style, bgColor = '#151513', color = '#fff', position = 'right', ...otherProps } = props;\n  const styl: React.CSSProperties = position === 'left' ? { left: 0, right: 'initial', transform: 'scale(-1, 1)' } : { right: 0, left: 'initial', transform: 'scale(1, 1)' };\n  if (bottom) {\n    styl.bottom = 0;\n    styl.top = 'initial';\n    styl.transform = position === 'left' ? 'scale(-1, -1)' : 'scale(1, -1)';\n  } else {\n    styl.bottom = 'initial';\n    styl.top = 0;\n  }\n  return (\n    <github-corners\n      target=\"__blank\"\n      width={size}\n      height={size}\n      href={props.href}\n      position={fixed ? 'fixed' : 'absolute'}\n      z-index={zIndex}\n      style={style}\n      fill={bgColor}\n      color={color}\n      {...styl}\n      {...otherProps}\n    />\n  );\n}","import { Element } from 'hast';\n\nexport const octiconLink: Element = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true',\n  },\n  children: [\n    {\n      type: 'element',\n      tagName: 'path',\n      children: [],\n      properties: {\n        fillRule: 'evenodd',\n        d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z',\n      },\n    },\n  ],\n};\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport interface ReservedMetaOptions {}\n\nexport const reservedMeta: Plugin<[ReservedMetaOptions?], Root> = (options = {}) => {\n  return (tree) => {\n    visit(tree, (node: Root | RootContent) => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = { ...node.properties, 'data-meta': String(node.data.meta) };\n      }\n    });\n  };\n};\n","import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport { Element } from 'hast';\nimport { PluggableList } from 'unified';\nimport gfm from 'remark-gfm';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeIgnore from 'rehype-ignore';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite, { getCodeString, RehypeRewriteOptions } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nimport './styles/markdown.less';\n\nimport { reservedMeta } from './plugins/reservedMeta';\n\nexport interface MarkdownPreviewProps extends Omit<Options, 'children'> {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  disableCopy?: boolean;\n  style?: React.CSSProperties;\n  pluginsFilter?: (type: 'rehype' | 'remark', plugin: PluggableList) => PluggableList;\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    'data-color-mode'?: 'light' | 'dark';\n  };\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  rehypeRewrite?: RehypeRewriteOptions['rewrite'];\n}\n\nexport interface MarkdownPreviewRef extends MarkdownPreviewProps {\n  mdp: React.RefObject<HTMLDivElement>;\n}\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const {\n    prefixCls = 'wmde-markdown wmde-markdown-color',\n    className,\n    source,\n    style,\n    disableCopy = false,\n    onScroll,\n    onMouseOver,\n    pluginsFilter,\n    rehypeRewrite: rewrite,\n    warpperElement = {},\n    ...other\n  } = props;\n  const mdp = React.createRef<HTMLDivElement>();\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n\n  const rehypeRewriteHandle: RehypeRewriteOptions['rewrite'] = (node, index, parent) => {\n    if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n      const child = node.children && (node.children[0] as Element);\n      if (child && child.properties && child.properties.ariaHidden === 'true') {\n        child.properties = { class: 'anchor', ...child.properties };\n        child.children = [octiconLink];\n      }\n    }\n    if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n      const code = getCodeString(node.children);\n      node.children.push(copyElement(code));\n    }\n    rewrite && rewrite(node, index, parent);\n  };\n\n  const rehypePlugins: PluggableList = [\n    reservedMeta,\n    [rehypePrism, { ignoreMissing: true }],\n    rehypeRaw,\n    slug,\n    headings,\n    rehypeIgnore,\n    [rehypeRewrite, { rewrite: rehypeRewriteHandle }],\n    [rehypeAttrs, { properties: 'attr' }],\n    ...(other.rehypePlugins || []),\n  ];\n  const customProps: MarkdownPreviewProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    },\n  };\n  const remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...warpperElement} className={cls} style={style}>\n      <ReactMarkdown\n        {...other}\n        {...customProps}\n        rehypePlugins={pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins}\n        remarkPlugins={pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n","import { Element } from 'hast';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\n\nexport function copyElement(str: string = ''): Element {\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      // @ts-ignore\n      onClick: (event) => {\n        const target = event.currentTarget || event.target;\n        target.classList.add('active');\n        copyTextToClipboard(target.dataset.code as string, function () {\n          setTimeout(() => {\n            target.classList.remove('active');\n          }, 2000);\n        });\n      },\n      'data-code': str,\n      class: 'copied',\n    },\n    children: [\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-copy',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z',\n            },\n            children: [],\n          },\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z',\n            },\n            children: [],\n          },\n        ],\n      },\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-check',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z',\n            },\n            children: [],\n          },\n        ],\n      },\n    ],\n  };\n}\n"],"names":["events","opts","type","ViewPlugin","constructor","view","dom","this","contentDOM","scrollDOM","Object","keys","forEach","keyname","addEventListener","destroy","removeEventListener","scroll","createTheme","theme","settings","styles","themeOptions","backgroundColor","background","color","foreground","gutterBackground","gutterForeground","gutterBorder","borderRightColor","caret","caretColor","borderLeftColor","lineHighlight","selection","selectionMatch","themeExtension","EditorView","dark","highlightStyle","HighlightStyle","syntaxHighlighting","copyTextToClipboard","text","cb","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","err","removeChild","removeAllRanges","addRange","warpperStyle","bottom","right","visibility","opacity","transition","cursor","userSelect","svgStyle","display","transform","circleStyle","childStyle","top","height","width","alignItems","justifyContent","fontSize","documentElement","BackToUp","props","className","prefixCls","element","size","strokeWidth","smooth","hideProgress","children","others","$dom","useRef","cls","filter","Boolean","join","assign","center","useMemo","radius","dasharray","Math","PI","useState","progress","setProgress","handleScroll","ev","clientHeight","scrollHeight","scrollTop","current","useEffect","scrollElement","passive","_jsxs","ref","onClick","scrollTo","behavior","viewBox","focusable","_jsx","fill","stroke","r","cx","cy","strokeDasharray","strokeDashoffset","basicSetup","options","keymaps","closeBracketsKeymap","concat","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","extensions","lineNumbers","push","highlightActiveLineGutter","highlightSpecialChars","history","foldGutter","drawSelection","dropCursor","allowMultipleSelections","EditorState","indentOnInput","defaultHighlightStyle","fallback","bracketMatching","closeBrackets","autocompletion","rectangularSelection","crosshairCursor","highlightActiveLine","highlightSelectionMatches","keymap","flat","useCodeMirror","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","minHeight","maxHeight","placeholder","placeholderStr","minWidth","maxWidth","editable","readOnly","indentWithTab","defaultIndentWithTab","defaultBasicSetup","root","initialState","container","setContainer","setView","state","setState","defaultLightThemeOption","defaultThemeOption","updateListener","vu","docChanged","doc","toString","line","lineAt","main","from","lineCount","lines","lineBreak","length","tabSize","selectionAsSingle","asSingle","ranges","selectionCode","sliceDoc","to","selections","map","selectedText","some","empty","getStatistics","getExtensions","unshift","oneDark","config","stateCurrent","json","fields","viewCurrent","parent","undefined","focus","dispatch","effects","StateEffect","currentValue","changes","insert","ReactCodeMirror","forwardRef","other","editor","useImperativeHandle","Error","defaultClassNames","displayName","GITHUB_CORNERS_TEMPLATE","innerHTML","GithubCorners","shadow","attachShadow","mode","ownerDocument","importNode","content","update","name","svg","querySelector","test","toLocaleLowerCase","lastElementChild","firstElementChild","getAttributeNames","getAttribute","setAttr","oldValue","newValue","HTMLElement","customElements","define","githubCorners","fixed","zIndex","bgColor","otherProps","styl","target","href","octiconLink","tagName","properties","version","ariaHidden","fillRule","d","reservedMeta","tree","visit","node","data","meta","String","React","source","disableCopy","onScroll","onMouseOver","pluginsFilter","rewrite","rehypeRewrite","warpperElement","mdp","rehypePlugins","rehypePrism","ignoreMissing","rehypeRaw","slug","headings","rehypeIgnore","index","child","class","code","getCodeString","str","event","currentTarget","classList","add","dataset","setTimeout","remove","rehypeAttrs","customProps","allowElement","remarkPlugins","gfm","ReactMarkdown"],"sourceRoot":""}